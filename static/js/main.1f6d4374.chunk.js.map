{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","prevName","name","currentName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAG1BM,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAbP,gCAgBE,SAAmBC,GACjB,IAAMC,EAAWD,EAAUE,KACrBC,EAAcX,KAAKY,MAAMF,KAE3BD,IAAaE,GAEfP,QAAQS,MAAR,uBAA8BJ,EAA9B,eAA6CE,MAtBnD,kCA0BE,WACEV,OAAOa,cAAcd,KAAKD,WA3B9B,oBA8BE,WACE,IAAQW,EAASV,KAAKY,MAAdF,KACAb,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGlB,EAAKS,cAAcC,OAAO,IAAK,YA3C1C,GAA2BS,IAAMC,W,MCNjC,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,GAQX,IAAMG,EAAb,4MACE1B,MAAQ,CACN2B,UAAU,EACVC,UAAW,WAHf,EAMEzB,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClB0B,SAASC,iBAAiB,eAAe,WACvC,EAAKvB,SAAS,CAAEoB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKvB,SAAS,CAAEoB,UAAU,OAG5BvB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEqB,UAAWN,QAC1B,QAnBP,oBAsBE,WACE,MAAgClB,KAAKJ,MAA7B2B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOb,KAAMc,WA7BlC,GAAyBR,IAAMC,WCZ/BU,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.1f6d4374.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  time: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.time.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const prevName = prevProps.name;\n    const currentName = this.props.name;\n\n    if (prevName !== currentName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${currentName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}